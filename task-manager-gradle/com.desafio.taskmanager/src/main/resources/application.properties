# HTTP Server
quarkus.http.port=8080

# Datasource - Ambiente de Desenvolvimento
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=taskuser
%dev.quarkus.datasource.password=taskpassword
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/taskdb
%dev.quarkus.datasource.devservices.enabled=false

# Datasource - Ambiente de Produção (Docker)
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME}
%prod.quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD}
%prod.quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL}
%prod.quarkus.datasource.devservices.enabled=false

# Hibernate / JPA
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true

# JWT Configuration - REMOVIDO
# quarkus.smallrye-jwt.enabled=true
# smallrye.jwt.sign.key=MySuperSecretSigningKey12345678901234567890123456789012
# smallrye.jwt.verify.key=MySuperSecretSigningKey12345678901234567890123456789012
# smallrye.jwt.verify.algorithm=HS256
# smallrye.jwt.sign.key-format=raw
# smallrye.jwt.new-token.issuer=taskmanager
# mp.jwt.verify.issuer=taskmanager
# quarkus.smallrye-jwt.auth-mechanism=MP-JWT
# quarkus.smallrye-jwt.token.header=Authorization
# quarkus.smallrye-jwt.realm-name=taskmanager
# quarkus.smallrye-jwt.devservices.enabled=false

# CORS 
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:5173
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Authorization,Content-Type
quarkus.http.cors.expose-headers=Authorization
quarkus.http.cors.allow-credentials=true

# Configurações gerais
quarkus.resteasy-reactive.default-produces=application/json;charset=UTF-8


# Permissões de autenticação - REMOVIDO
# quarkus.http.auth.permission.register.paths=/auth/register
# quarkus.http.auth.permission.register.policy=permit
# quarkus.http.auth.permission.login.paths=/auth/login
# quarkus.http.auth.permission.login.policy=permit
# quarkus.http.auth.permission.authenticated.paths=/*
# quarkus.http.auth.permission.authenticated.policy=authenticated